# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uUoC-aQmCyKrsdBX4OGaH2g-Sbx1XEM9
"""


streamlit run dashboard.py

import streamlit as st
import pandas as pd
import plotly.express as px

# Load the Excel file
df = pd.read_excel("processed_data.xlsx")

# Title and layout
st.set_page_config(page_title="Lean 4.0 Maturity Dashboard", layout="wide")
st.title("📊 Lean 4.0 Maturity Assessment Dashboard")
st.markdown("Gain insights into Lean & Digital transformation maturity across industries.")

# Sidebar Filters
with st.sidebar:
    st.header("🔎 Filters")
    sector = st.multiselect("Secteur industriel", df["Quelle est le secteur de votre entreprise ? "].unique())
    size = st.multiselect("Taille entreprise ", df["Taille entreprise "].unique())

    filtered_df = df.copy()
    if sector:
        filtered_df = filtered_df[filtered_df["Quelle est le secteur de votre entreprise ?"].isin(sector)]
    if size:
        filtered_df = filtered_df[filtered_df["Taille entreprise"].isin(size)]

# Key Metrics
col1, col2, col3 = st.columns(3)
col1.metric("🎯 Moyenne Lean Score", f"{filtered_df['Lean Score'].mean():.2f}")
col2.metric("🤖 Moyenne Tech Score", f"{filtered_df['Tech Score'].mean():.2f}")
col3.metric("📈 Moyenne Combined Score", f"{filtered_df['Combined Score'].mean():.2f}")

st.markdown("---")

# Score Distribution
col4, col5 = st.columns(2)

with col4:
    fig = px.histogram(filtered_df, x="Lean Score", nbins=10, title="Distribution du Lean Score")
    st.plotly_chart(fig, use_container_width=True)

with col5:
    fig = px.histogram(filtered_df, x="Tech Score", nbins=10, title="Distribution du Tech Score")
    st.plotly_chart(fig, use_container_width=True)

# Maturity Levels
st.markdown("### 🏆 Répartition des niveaux de maturité")
col6, col7 = st.columns(2)

with col6:
    fig = px.pie(filtered_df, names="Maturity Level", title="Maturity Level")
    st.plotly_chart(fig, use_container_width=True)

with col7:
    # Create a DataFrame with sector counts, using the default column names 'index' and 'count'
    sector_counts_df = filtered_df["Quelle est le secteur de votre entreprise ? "].value_counts().reset_index()
    fig = px.bar(sector_counts_df,
                 x="Quelle est le secteur de votre entreprise ? ",  # Use the actual column name for sectors
                 y="count",  # Use the default column name for counts
                 title="Répartition par secteur",
                 labels={"Quelle est le secteur de votre entreprise ? ": "Secteur", "count": "Nombre"}) # Map the actual and default column names to desired labels
    st.plotly_chart(fig, use_container_width=True)

# Scatterplot: Tech vs Lean Scores
st.markdown("### 🔬 Corrélation entre Lean et Tech Scores")
fig = px.scatter(filtered_df, x="Lean Score", y="Tech Score", color="Maturity Level",
                 hover_data=["Nom de l'entreprise", "Poste occupé", "Taille entreprise "], # Corrected column name
                 title="Lean Score vs Tech Score par entreprise")
st.plotly_chart(fig, use_container_width=True)

# Raw Data
with st.expander("🧾 Voir les données brutes"):
    st.dataframe(filtered_df)
